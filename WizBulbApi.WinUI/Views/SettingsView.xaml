<local:_SettingsView
    x:Class="WizBulbApi.WinUI.SettingsView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="using:WizBulbApi.WinUI"
    xmlns:attached="using:MvvmFramework.WinUI.AttachedProperties"
    xmlns:framework="using:MvvmFramework.WinUI"
    mc:Ignorable="d"
    >
    <Page.Resources>

        <framework:IntDoubleConverter x:Name="IntDoubleConverter" />
        <local:ApplicationThemeBoolConverter x:Name="ApplicationThemeBoolConverter" />

    </Page.Resources>


    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <StackPanel
            Grid.Row="0"
            Spacing="30"
            Margin="0 20 0 0"
            >
            <ComboBox
                ItemsSource="{x:Bind ViewModel.NetworkInterfaces, Mode=OneWay}"
                attached:Validation.Validate="NetworkInterface"
                attached:Validation.DismissTrigger="ValueChanged"
                attached:Validation.ValueChangedPropertyName="SelectedItem"
                FontSize="20"
                HorizontalAlignment="Stretch"
                SelectedItem="{x:Bind ViewModel.NetworkInterface, Mode=TwoWay}"
                DisplayMemberPath="Name"
                PlaceholderText="Network"
                />

            <NumberBox
                Value="{x:Bind ViewModel.HomeId, Mode=TwoWay, Converter={StaticResource IntDoubleConverter}, UpdateSourceTrigger=PropertyChanged}"
                attached:Validation.Validate="HomeId"
                attached:Validation.DismissTrigger="ValueChanged"
                attached:Validation.ValueChangedPropertyName="Value"
                FontSize="20"
                PlaceholderText="Home ID"
                />

            <StackPanel Orientation="Horizontal">
                <ToggleSwitch
                    FontSize="20"
                    Margin="2 0 0 0"
                    Header="Theme"
                    OffContent="Dark"
                    OnContent="Light"
                    IsOn="{x:Bind ViewModel.Theme, Mode=TwoWay, Converter={StaticResource ApplicationThemeBoolConverter}}"
                    />

                <Border
                    Background="{ThemeResource CardBackgroundFillColorDefault}"
                    BorderBrush="{ThemeResource ControlElevationBorderBrush}"
                    BorderThickness="1"
                    CornerRadius="6"
                    Padding="15 10"
                    Visibility="{x:Bind ViewModel.ThemeHasChanged, Mode=OneWay, Converter={StaticResource BoolVisibilityConverter}}"
                    Opacity="{x:Bind ViewModel.ThemeHasChanged, Mode=OneWay, Converter={StaticResource BoolOpacityConverter}}"
                    >
                    <Border.OpacityTransition>
                        <ScalarTransition />
                    </Border.OpacityTransition>

                    <StackPanel>
                        <TextBlock
                            Text="Changing the theme requires a restart."
                            TextWrapping="WrapWholeWords"
                            Width="130"
                            TextAlignment="Right"
                            />
                        <Button
                            Content="Restart now"
                            Command="{x:Bind ViewModel.RestartCommand, Mode=OneWay}"
                            Margin="0 10 0 0"
                            HorizontalAlignment="Right"
                            />
                    </StackPanel>
                </Border>
            </StackPanel>
        </StackPanel>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Button
                Grid.Column="0"
                Content="Cancel"
                Command="{x:Bind ViewModel.CancelCommand, Mode=OneWay}"
                HorizontalAlignment="Stretch"
                />

            <Button
                Grid.Column="1"
                Content="Save"
                Command="{x:Bind ViewModel.SaveCommand, Mode=OneWay}"
                HorizontalAlignment="Stretch"
                IsEnabled="{x:Bind ViewModel.HasChanges, Mode=OneWay}"
                />
        </Grid>

    </Grid>
</local:_SettingsView>
